{"version":3,"sources":["fbase.js","routes/Profile.js","components/AuthForm.js","routes/Auth.js","components/TextList.js","components/NewForm.js","routes/Home.js","components/Nav.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","dbService","storageService","userObj","refreshUser","history","useHistory","useState","displayName","newDisplayName","setNewDisplayName","onSubmit","e","a","preventDefault","updateProfile","Wrap","className","type","autoFocus","placeholder","onChange","value","target","onClick","signOut","push","styled","div","Form","form","Switch","span","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","name","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","required","prev","Auth","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","List","TextList","listObj","isOwner","isEditing","setIsEditing","text","newText","setNewText","onDelete","window","confirm","doc","id","delete","refFromURL","attachmentUrl","onToggle","update","src","alt","faTrash","faPencilAlt","NewForm","attachment","setAttachment","setText","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","information","createDate","Date","toLocaleString","creatorId","collection","add","maxLength","for","faPlus","accept","thefile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","width","height","backgroundImage","faTimes","Home","setData","useEffect","onSnapshot","snapshot","newArray","docs","map","list","key","Navigation","nav","Nav","to","faUser","AppRouter","isLoggedIn","exact","path","Profile","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","user","args","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.135c7ae9.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nexport default ({ userObj, refreshUser }) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const onLogOut = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n\r\n    const onChange = (e) => {\r\n        const {\r\n            target: { value },\r\n        } = e;\r\n        setNewDisplayName(value);\r\n    };\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (userObj.displayName !== newDisplayName) {\r\n            await userObj.updateProfile({\r\n                displayName: newDisplayName,\r\n            });\r\n            refreshUser();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Wrap>\r\n            <form className=\"profileForm\" onSubmit={onSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    autoFocus\r\n                    placeholder=\"name\"\r\n                    onChange={onChange}\r\n                    value={newDisplayName}\r\n                    className=\"formInput\"\r\n                />\r\n                <input type=\"submit\" className=\"formBtn\" value=\"update Profile\" />\r\n            </form>\r\n            <button className=\"logout\" onClick={onLogOut}>\r\n                Log Out\r\n            </button>\r\n        </Wrap>\r\n    );\r\n};\r\n\r\nconst Wrap = styled.div`\r\n    width: 100%;\r\n    max-width: 320px;\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    .profileForm {\r\n        border-bottom: 1px solid rgba(255, 255, 255, 0.9);\r\n        padding-bottom: 30px;\r\n        width: 100%;\r\n        display: flex;\r\n        flex-direction: column;\r\n\r\n        input {\r\n            &.formInput {\r\n                width: 100%;\r\n                padding: 10px 20px;\r\n                border-radius: 20px;\r\n                border: 1px solid black;\r\n                text-align: center;\r\n                background-color: white;\r\n                color: black;\r\n            }\r\n            &.formBtn {\r\n                cursor: pointer;\r\n                width: 100%;\r\n                padding: 7px 20px;\r\n                text-align: center;\r\n                color: white;\r\n                border-radius: 20px;\r\n                background-color: #04aaff;\r\n                cursor: pointer;\r\n            }\r\n        }\r\n    }\r\n\r\n    .logout {\r\n        margin-top: 50px;\r\n        cursor: pointer;\r\n        background-color: tomato;\r\n        cursor: pointer;\r\n        width: 100%;\r\n        padding: 7px 20px;\r\n        text-align: center;\r\n        color: white;\r\n        border-radius: 20px;\r\n        background-color: #04aaff;\r\n        cursor: pointer;\r\n    }\r\n`;\r\n","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const onChange = (e) => {\r\n        const {\r\n            target: { name, value },\r\n        } = e;\r\n        if (name === \"email\") {\r\n            setEmail(value);\r\n        } else if (name === \"password\") {\r\n            setPassword(value);\r\n        }\r\n    };\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            let data;\r\n            if (newAccount) {\r\n                data = await authService.createUserWithEmailAndPassword(email, password);\r\n            } else {\r\n                data = await authService.signInWithEmailAndPassword(email, password);\r\n            }\r\n            console.log(data);\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n    };\r\n\r\n    const toggleAccount = () => {\r\n        setNewAccount((prev) => !prev);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Form onSubmit={onSubmit}>\r\n                <input\r\n                    className=\"authInput\"\r\n                    name=\"email\"\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    required\r\n                    value={email}\r\n                    onChange={onChange}\r\n                />\r\n                <input\r\n                    className=\"authInput\"\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    required\r\n                    value={password}\r\n                    onChange={onChange}\r\n                />\r\n                <input\r\n                    className=\"authInput authSubmit\"\r\n                    type=\"submit\"\r\n                    value={newAccount ? \"Create Account\" : \"Log In\"}\r\n                />\r\n                {error && <span className=\"authError\">{error}</span>}\r\n            </Form>\r\n            <Switch className=\"authSwitch\" onClick={toggleAccount}>\r\n                {newAccount ? \"Sign in\" : \"Create Account\"}\r\n            </Switch>\r\n        </>\r\n    );\r\n};\r\n\r\nconst Form = styled.form`\r\n    width: 100%;\r\n    max-width: 320px;\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    .authInput {\r\n        max-width: 320px;\r\n        width: 100%;\r\n        padding: 10px;\r\n        border-radius: 30px;\r\n        background-color: rgba(255, 255, 255, 1);\r\n        margin-bottom: 10px;\r\n        font-size: 12px;\r\n        color: black;\r\n    }\r\n\r\n    .authSubmit {\r\n        text-align: center;\r\n        background: #04aaff;\r\n        color: white;\r\n        margin-top: 10;\r\n        cursor: pointer;\r\n    }\r\n\r\n    .authError {\r\n        color: tomato;\r\n        text-align: center;\r\n        font-weight: 500;\r\n        font-size: 12px;\r\n    }\r\n`;\r\n\r\nconst Switch = styled.span`\r\n    color: #04aaff;\r\n    cursor: pointer;\r\n    margin-top: 10px;\r\n    margin-bottom: 50px;\r\n    display: block;\r\n    font-size: 12px;\r\n    text-decoration: underline;\r\n`;\r\nexport default AuthForm;\r\n","import React from \"react\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport AuthForm from \"components/AuthForm\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter, faGoogle, faGithub } from \"@fortawesome/free-brands-svg-icons\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Auth = () => {\r\n    const onSocialClick = async (e) => {\r\n        const {\r\n            target: { name },\r\n        } = e;\r\n        let provider;\r\n        if (name === \"google\") {\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        } else if (name === \"github\") {\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n\r\n        await authService.signInWithPopup(provider);\r\n    };\r\n    return (\r\n        <Wrap>\r\n            <FontAwesomeIcon\r\n                icon={faTwitter}\r\n                color={\"#04AAFF\"}\r\n                size=\"3x\"\r\n                style={{ marginBottom: 30 }}\r\n            />\r\n\r\n            <AuthForm />\r\n\r\n            <div className=\"authBtns\">\r\n                <button className=\"authBtn\" onClick={onSocialClick} name=\"google\">\r\n                    Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n                </button>\r\n                <button className=\"authBtn\" onClick={onSocialClick} name=\"github\">\r\n                    Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n                </button>\r\n            </div>\r\n        </Wrap>\r\n    );\r\n};\r\n\r\nconst Wrap = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100vh;\r\n    justify-content: center;\r\n    align-items: center;\r\n    .authBtns {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        width: 100%;\r\n        max-width: 320px;\r\n        .authBtn {\r\n            cursor: pointer;\r\n            border-radius: 20px;\r\n            border: none;\r\n            padding: 10px 0px;\r\n            font-size: 12px;\r\n            text-align: center;\r\n            width: 150px;\r\n            background: white;\r\n            cursor: pointer;\r\n        }\r\n    }\r\n`;\r\n\r\nexport default Auth;\r\n","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport styled from \"styled-components\";\r\n\r\nconst TextList = ({ listObj, isOwner }) => {\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const [newText, setNewText] = useState(listObj.text);\r\n    const onDelete = async () => {\r\n        const yes = window.confirm(\"지우시겠습니까?\");\r\n        if (yes) {\r\n            await dbService.doc(`information/${listObj.id}`).delete();\r\n            await storageService.refFromURL(listObj.attachmentUrl).delete();\r\n        }\r\n    };\r\n    const onToggle = () => {\r\n        setIsEditing((prev) => !prev);\r\n    };\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        await dbService.doc(`information/${listObj.id}`).update({\r\n            text: newText,\r\n        });\r\n        setIsEditing(false);\r\n    };\r\n    const onChange = (e) => {\r\n        const {\r\n            target: { value },\r\n        } = e;\r\n        setNewText(value);\r\n    };\r\n    return (\r\n        <List>\r\n            {isEditing ? (\r\n                <>\r\n                    <form onSubmit={onSubmit} className=\"container\">\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder={listObj.text}\r\n                            onChange={onChange}\r\n                            value={newText}\r\n                            className=\"formInput\"\r\n                        />\r\n                        <input type=\"submit\" value=\"수정하기\" className=\"formBtn\" />\r\n                    </form>\r\n                    <button className=\"cancelBtn\" onClick={onToggle}>\r\n                        cancel\r\n                    </button>\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <h4>{listObj.text}</h4>\r\n                    {listObj.attachmentUrl && <img src={listObj.attachmentUrl} alt=\"사진\" />}\r\n                    {isOwner && (\r\n                        <div className=\"actions\">\r\n                            <button onClick={onDelete}>\r\n                                <FontAwesomeIcon icon={faTrash} />\r\n                            </button>\r\n                            <button onClick={onToggle}>\r\n                                <FontAwesomeIcon icon={faPencilAlt} />\r\n                            </button>\r\n                        </div>\r\n                    )}\r\n                </>\r\n            )}\r\n        </List>\r\n    );\r\n};\r\n\r\nconst List = styled.div`\r\n    margin-bottom: 20px;\r\n    background-color: white;\r\n    width: 100%;\r\n    max-width: 320px;\r\n    padding: 20px;\r\n    border-radius: 10px;\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: column;\r\n    color: rgba(0, 0, 0, 0.8);\r\n\r\n    .container {\r\n        width: 100%;\r\n        max-width: 320px;\r\n        display: flex;\r\n        flex-direction: column;\r\n\r\n        .formBtn {\r\n            cursor: pointer;\r\n            width: 100%;\r\n            margin-top: 10px;\r\n            padding: 7px 20px;\r\n            text-align: center;\r\n            color: white;\r\n            border-radius: 20px;\r\n            background-color: #04aaff;\r\n            cursor: pointer;\r\n        }\r\n    }\r\n\r\n    .cancelBtn {\r\n        cursor: pointer;\r\n        background-color: tomato;\r\n        margin-top: 15px;\r\n        margin-bottom: 5px;\r\n        width: 100%;\r\n        padding: 7px 20px;\r\n        text-align: center;\r\n        color: white;\r\n        border-radius: 20px;\r\n    }\r\n\r\n    h4 {\r\n        font-size: 14px;\r\n    }\r\n\r\n    img {\r\n        right: -10px;\r\n        top: 20px;\r\n        position: absolute;\r\n        border-radius: 50%;\r\n        width: 50px;\r\n        height: 50px;\r\n        margin-top: 10px;\r\n    }\r\n\r\n    .actions {\r\n        position: absolute;\r\n        right: 10px;\r\n        top: 10px;\r\n\r\n        button:first-child {\r\n            margin-right: 10px;\r\n        }\r\n    }\r\n`;\r\n\r\nexport default TextList;\r\n","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport styled from \"styled-components\";\r\n\r\nconst NewForm = ({ userObj }) => {\r\n    const [attachment, setAttachment] = useState(\"\");\r\n    const [text, setText] = useState(\"\");\r\n\r\n    const onSubmit = async (e) => {\r\n        if (text === \"\") {\r\n            return;\r\n        }\r\n\r\n        e.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if (attachment !== \"\") {\r\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(attachment, \"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        const information = {\r\n            text,\r\n            createDate: new Date().toLocaleString(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl,\r\n        };\r\n        await dbService.collection(\"information\").add(information);\r\n        setText(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n\r\n    const onChange = (e) => {\r\n        const {\r\n            target: { value },\r\n        } = e;\r\n        setText(value);\r\n    };\r\n\r\n    const onFileChange = (e) => {\r\n        const {\r\n            target: { files },\r\n        } = e;\r\n        const thefile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: { result },\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        reader.readAsDataURL(thefile);\r\n    };\r\n\r\n    const onClearAttachment = () => {\r\n        setAttachment(null);\r\n    };\r\n    return (\r\n        <Form onSubmit={onSubmit}>\r\n            <div className=\"container\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"what's on your mind?\"\r\n                    maxLength={120}\r\n                    onChange={onChange}\r\n                    value={text}\r\n                    className=\"text\"\r\n                />\r\n                <input type=\"submit\" value=\"&rarr;\" className=\"arrow\" />\r\n            </div>\r\n\r\n            <label for=\"attach-file\">\r\n                <span>Add photos</span>\r\n                <FontAwesomeIcon icon={faPlus} />\r\n            </label>\r\n            <input\r\n                id=\"attach-file\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={onFileChange}\r\n                style={{\r\n                    opacity: 0,\r\n                }}\r\n            />\r\n\r\n            {attachment && (\r\n                <div className=\"attachment\">\r\n                    <img\r\n                        src={attachment}\r\n                        alt=\"이미지\"\r\n                        width=\"100px\"\r\n                        height=\"100px\"\r\n                        style={{\r\n                            backgroundImage: attachment,\r\n                        }}\r\n                    />\r\n                    <button className=\"clear\" onClick={onClearAttachment}>\r\n                        <span>Remove</span>\r\n                        <FontAwesomeIcon icon={faTimes} />\r\n                    </button>\r\n                </div>\r\n            )}\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst Form = styled.form`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    width: 100%;\r\n\r\n    .container {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        flex-wrap: wrap;\r\n        position: relative;\r\n        margin-bottom: 20px;\r\n        width: 100%;\r\n\r\n        input {\r\n            height: 40px;\r\n            padding: 0px 20px;\r\n            color: white;\r\n            border: 1px solid #04aaff;\r\n            border-radius: 20px;\r\n            font-weight: 500;\r\n            font-size: 12px;\r\n\r\n            &.text {\r\n                width: 200px;\r\n                margin-right: 20px;\r\n            }\r\n        }\r\n\r\n        .arrow {\r\n            background-color: #04aaff;\r\n            height: 40px;\r\n            width: 40px;\r\n            padding: 10px 0px;\r\n            text-align: center;\r\n            box-sizing: border-box;\r\n            border-radius: 20px;\r\n            color: white;\r\n        }\r\n    }\r\n\r\n    label {\r\n        color: #04aaff;\r\n        cursor: pointer;\r\n\r\n        > span {\r\n            margin-right: 10px;\r\n            font-size: 12px;\r\n        }\r\n    }\r\n\r\n    .attachment {\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n\r\n        img {\r\n            height: 80px;\r\n            width: 80px;\r\n            border-radius: 40px;\r\n        }\r\n\r\n        .clear {\r\n            color: #04aaff;\r\n            cursor: pointer;\r\n            text-align: center;\r\n\r\n            span {\r\n                margin-right: 10px;\r\n                font-size: 12px;\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport default NewForm;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { dbService } from \"fbase\";\r\nimport TextList from \"components/TextList\";\r\nimport NewForm from \"components/NewForm\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Home = ({ userObj }) => {\r\n    const [data, setData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        dbService.collection(\"information\").onSnapshot((snapshot) => {\r\n            const newArray = snapshot.docs.map((doc) => ({\r\n                id: doc.id,\r\n                ...doc.data(),\r\n            }));\r\n            setData(newArray);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <Wrap>\r\n            <NewForm userObj={userObj} />\r\n            <div className=\"list_box\">\r\n                {data.map((list) => (\r\n                    <TextList\r\n                        key={list.id}\r\n                        listObj={list}\r\n                        isOwner={list.creatorId === userObj.uid}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </Wrap>\r\n    );\r\n};\r\n\r\nconst Wrap = styled.div`\r\n    width: 100%;\r\n    max-width: 320px;\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    .list_box {\r\n        margin-top: 30px;\r\n    }\r\n`;\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Nav = ({ userObj }) => {\r\n    return (\r\n        <Navigation>\r\n            <ul>\r\n                <li>\r\n                    <Link className=\"home\" to=\"/\">\r\n                        <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <Link className=\"profile\" to=\"/profile\">\r\n                        <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n                        <span>\r\n                            {userObj.displayName ? `${userObj.displayName}의 Profile` : \"Profile\"}\r\n                        </span>\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </Navigation>\r\n    );\r\n};\r\n\r\nconst Navigation = styled.nav`\r\n    ul {\r\n        display: flex;\r\n        justify-content: center;\r\n        margin-top: 50px;\r\n\r\n        li {\r\n            .home {\r\n                margin-top: 10px;\r\n            }\r\n\r\n            .profile {\r\n                margin-left: 10px;\r\n                display: flex;\r\n                flex-direction: column;\r\n                align-items: center;\r\n                font-size: 12px;\r\n\r\n                span {\r\n                    margin-top: 10px;\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Profile from \"routes/Profile\";\r\nimport styled from \"styled-components\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport Nav from \"./Nav\";\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Nav userObj={userObj} />}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                    <Wrap>\r\n                        <Route exact path=\"/\">\r\n                            <Home userObj={userObj} />\r\n                        </Route>\r\n                        <Route exact path=\"/profile\">\r\n                            <Profile userObj={userObj} refreshUser={refreshUser} />\r\n                        </Route>\r\n                    </Wrap>\r\n                ) : (\r\n                    <>\r\n                        <Route exact path=\"/\">\r\n                            <Auth />\r\n                        </Route>\r\n                    </>\r\n                )}\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\n\r\nconst Wrap = styled.div`\r\n    max-width: 890;\r\n    width: 100%;\r\n    margin: 0 auto;\r\n    margin-top: 80px;\r\n    display: flex;\r\n    justify-content: center;\r\n`;\r\n\r\nexport default AppRouter;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport AppRouter from \"components/Router\";\r\nimport { authService } from \"fbase\";\r\n\r\nfunction App() {\r\n    const [init, setInit] = useState(false);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n    const [userObj, setUserObj] = useState(null);\r\n\r\n    useEffect(() => {\r\n        authService.onAuthStateChanged((user) => {\r\n            if (user) {\r\n                setIsLoggedIn(true);\r\n                setUserObj({\r\n                    displayName: user.displayName,\r\n                    uid: user.uid,\r\n                    updateProfile: (args) => user.updateProfile(args),\r\n                });\r\n            } else {\r\n                setIsLoggedIn(false);\r\n            }\r\n            setInit(true);\r\n        });\r\n    }, []);\r\n\r\n    const refreshUser = () => {\r\n        const user = authService.currentUser;\r\n        setUserObj({\r\n            displayName: user.displayName,\r\n            uid: user.uid,\r\n            updateProfile: (args) => user.updateProfile(args),\r\n        });\r\n    };\r\n    return (\r\n        <>\r\n            {init ? (\r\n                <AppRouter isLoggedIn={isLoggedIn} userObj={userObj} refreshUser={refreshUser} />\r\n            ) : (\r\n                \"Initializing....\"\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport \"./assets/reset.css\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}